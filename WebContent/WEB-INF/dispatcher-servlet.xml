<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

<!-- 돌려줄 파일의 확장자를 정해둔 것 -->
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/" />  
    <property name="suffix" value=".jsp" /> 
</bean>

<!-- /test/msg.action 주소가 오면 com.test.TestController로 가라 -->
<bean id="beanNameUrlMapping" 
	class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
<bean name="/test/msg.action" class="com.test.TestController"/>


<!-- 어노테이션 사용 설정 -->
<!-- base-package : 특정 패키지에서만 쓰고싶으면 패키지의 이름을 쓰면 된다.
					전체 패키지에서 쓰고싶으면 *을 쓰면 된다. -->
<context:component-scan base-package="*" scoped-proxy="no"/>

<!-- 어노테이션을 사용하기 위한 컨트롤러 등록 -->
<bean 
class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"
p:alwaysUseFullPath="true">
	<property name="order" value="1"/>
</bean>



<!-- 
alwaysUseFullPath가
true : http://localhost/test/a.action처럼 나오고
false : http://localhost/a.action처럼 나온다. 중간주소가 없다.
 -->
<!-- <property name="order" value="2"/> : 
 			어노테이션과 이 맵핑이 동시에 존재할 때의 우선순위가 2라는 의미 -->
<bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	<property name="order" value="2"/>
	<property name="alwaysUseFullPath" value="true"/>
	<property name="mappings">
		<props>
			<prop key="/test/write.action">listFormController</prop>
			<prop key="/test/write_ok.action">listController</prop>
			<prop key="/test1/login.action">loginController</prop>
			<prop key="/test2/mem.action">memController</prop>
			<prop key="/multi/*.action">multiTestController</prop>
		</props>
	</property>
</bean>


<bean id="propsResolver" class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
	<property name="mappings">
		<props>
			<prop key="/multi/list.action">list</prop>
			<prop key="/multi/view.action">view</prop>
		</props>
	</property>
</bean>

<bean name="multiTestController" class="com.test3.MultiTestController">
	<property name="methodNameResolver" ref="propsResolver"/>
</bean>

<!-- test/mem의 인덱스는 순서대로 0-1-2 -->
<bean name="memController" class="com.test2.MemController">
	<property name="pages">
		<list>
			<value>test2/mem1</value>
			<value>test2/mem2</value>
			<value>test2/mem3</value>
		</list>
	</property>
</bean>


<!-- LoginAuthenticatorImpl를 authenticator-ref 이름으로 객체 생성 -->
<bean name="authenticator-ref" class="com.test1.LoginAuthenticatorImpl"/>
<bean name="loginController" class="com.test1.LoginController">
	<property name="authenticator" ref="authenticator-ref"/>
	<property name="commandClass" value="com.test1.LoginCommand"/>
	<property name="commandName" value="loginCommand"/>
	<property name="formView" value="test1/login"/>
</bean>


<!-- listController는 메소드이기 때문에 객체를 생성해주어야 한다. -->
<bean name="listFormController" class="com.test.ListFormController"/>
<bean name="listController" class="com.test.ListController"/>


</beans>